#!/usr/bin/ruby
#encoding: utf-8

# Just for fun

#
# Extremely silly character descriptions
#

$c = {	'a' => ['А как русская а'],
	'b' => ['Бэ как русская бэ без палочки', 'б как палочка такая - животик как бы вправо смотрит', 'как пудреница влево', 'б как мягкий знак', 'как русская вэ', 'как русская р вверх тормашками'],
	'c' => ['Цэ как русская эс'],
	'd' => ['Дэ как русская дэ прописная', 'дэ как пудреница вправо', 'дэ как бэ в другую сторону'],
	'e' => ['Е как русская е'],
	'f' => ['Эф как разводной ключик', 'эф жирафиком'],
	'g' => ['Джи как русская дэ'],
	'h' => ['Аш как стульчик'],
	'i' => ['И как палочка с чётрочкой'],
	'j' => ['Джэй как клюшка с точкой'],
	'k' => ['Ка как русская ка', 'ка обычная'],
	'l' => ['Эль как единичка', 'эль как палочка'],
	'm' => ['Эм как русская эм'],
	'n' => ['Эн как русская пэ'],
	'o' => ['О как русская о'],
	'p' => ['Пэ как русская эр', 'русская эр только пэ'],
	'q' => ['Ку как русская эр наоборот'],
	'r' => ['Эр как гэ'],
	's' => ['ЭС КАК ДОЛЛАР!'],
	't' => ['Тэ как русская тэ', 'тэ как перевёрнутая английская эф'],
	'u' => ['У как русская строчная и', 'У как русская пэ перевёрнутая'],
	'w' => ['Дубль вэ как две галочки', 'первёрнутая эм'],
	'v' => ['Вэ как как галочка', 'вэ птичкой'],
	'x' => ['Икс как русская хэ'],
	'y' => ['Игрек как русская у'],
	'z' => ['Зет как Зорро', 'буква зе'],
	' ' => ['Пробел', 'Пустое место между слов']
}

def jff str
	export = Array.new
	str.each_char do |c|
		export.push $c[c.downcase].sample
	end
	puts export.join(', ')
end

if !ARGV[0].match(/[\u0400-\u04ff]/i)
	puts "ENG"
	jff ARGV[0].to_s
else
	puts "Please enter cyrillic text"
	exit
end
